Imports System.Data.SqlClient
Public Class Form1
    Private Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click
        Me.Close()
    End Sub

    Private Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        Dim itemID As Integer
        Dim itemName As String
        Dim quantity As Integer
        Dim unitPrice As Integer

        If Not Integer.TryParse(txtID.Text, itemID) Then
            MessageBox.Show("Please enter a valid ID number! ")
            txtID.Focus()
            Exit Sub
        End If


        If Not Integer.TryParse(txtQuantity.Text, quantity) Then
            MessageBox.Show("Please enter a valid quantity number! ")
            txtID.Focus()
            Exit Sub
        End If


        If Not Integer.TryParse(txtPrice.Text, unitPrice) Then
            MessageBox.Show("Please enter a valid amount! ")
            txtPrice.Focus()
            Exit Sub
        End If

        If String.IsNullOrWhiteSpace(txtName.Text) Then
            MessageBox.Show("Please enter a valid name!")
            txtName.Focus()
            Exit Sub
        End If
        MessageBox.Show("Data saved successfully!üòÅüòÅ")

        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            con.Open()
            Dim query As String = "INSERT INTO inventory" &
                "(itemid, itemname, quantity, price)" &
                "VALUES(@itemid,@itemname,@quantity,@price)"
            Dim cmd As New SqlCommand(query, con)
            cmd.Parameters.AddWithValue("@itemid", txtID.Text)
            cmd.Parameters.AddWithValue("@itemname", txtName.Text)
            cmd.Parameters.AddWithValue("@quantity", txtQuantity.Text)
            cmd.Parameters.AddWithValue("@price", txtPrice.Text)
            cmd.ExecuteNonQuery()
            MessageBox.Show("Record successfully saved", "Saving")

        Catch ex As Exception
            MessageBox.Show("An error occured")

        Finally
            If con.State = ConnectionState.Open Then
                con.Close()
            End If
        End Try

    End Sub

    Private Sub btnClear_Click(sender As Object, e As EventArgs) Handles btnClear.Click
        txtID.Text = ""
        txtName.Text = ""
        txtPrice.Text = ""
        txtQuantity.Text = ""

    End Sub

    Sub refreshdata()
        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            con.Open()
            Dim cmd As New SqlCommand("SELECT COUNT (*) FORM inventory", con)
            Dim recordCount As Integer = Convert.ToInt32(cmd.ExecuteScalar())
            txtitems.Text = recordCount
        Catch ex As Exception
            MessageBox.Show("Error ! " & ex.Message)
        Finally
            con.Close()
        End Try

    End Sub

    Private Sub preview()
        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            con.Open()
            Dim query As String = "SELECT * FROM inventory"
            Dim cmd As New SqlCommand(query, con)
            Dim da As New SqlDataAdapter(cmd)
            Dim dt As New DataTable()
            da.Fill(dt)
            dgvpreview.DataSource = dt
        Catch ex As Exception
            MessageBox.Show("Error loading preview: " & ex.Message)
        Finally
            con.Close()
        End Try
    End Sub


    Private Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            If dgvpreview.SelectedCells.Count = 0 Then
                MessageBox.Show("Please select a record to delete")
                Return
            End If

            Dim itemID As Integer = Convert.ToInt32(dgvpreview.SelectedRows(0).Cells(0).Value)

            Dim confirm As DialogResult = MessageBox.Show("Are you sure you want to delete this record? ", "Confirm Deletion", MessageBoxButtons.YesNo)

            If confirm = DialogResult.No Then
                Return
            End If

            Dim query As String = "DELETE FROM inventory WHERE itemid=@itemid"
            Dim cmd As New SqlCommand(query, con)
            cmd.Parameters.AddWithValue("itemid", itemID)
            con.Open()

            cmd.ExecuteNonQuery()

            con.Close()

            MessageBox.Show("Record deleted successfully!", "Deleted")
            preview()
        Catch ex As Exception
            MessageBox.Show("ERROR !", ex.Message)
        Finally
            con.Close()
        End Try

    End Sub



    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Me.InventoryTableAdapter.Fill(Me.DUKE_MARTDataSet.inventory)

    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles btnpreview.Click

        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            con.Open()
            Dim myquery As String = "SELECT * FROM inventory"
            Dim cmd As New SqlCommand(myquery, con)
            Dim da As New SqlDataAdapter(cmd)
            Dim dt As New DataTable()
            da.Fill(dt)
            dgvpreview.datasource = dt

        Catch ex As Exception
            MessageBox.Show("Error! Record not saved " & ex.Message)

        Finally
            con.Close()
        End Try
    End Sub

    Private Sub btnsearch_Click(sender As Object, e As EventArgs) Handles btnsearch.Click
        Dim con As New SqlConnection("Data Source=DESKTOP-345CQH4;Initial Catalog=DUKE MART;Integrated Security=True")
        Try
            con.Open()
            Dim query As String = "SELECT * FROM inventory WHERE itemname LIKE @itemname"
            Dim cmd As New SqlCommand(query, con)
            cmd.Parameters.AddWithValue("@itemname", "%" & txtsearch.Text & "%")
            Dim da As New SqlDataAdapter(cmd)
            Dim dt As New DataTable()
            da.Fill(dt)
            dgvpreview.DataSource = dt

        Catch ex As Exception
            MessageBox.Show("Error! Record not saved " & ex.Message)

        Finally
            con.Close()
        End Try

    End Sub
End Class
